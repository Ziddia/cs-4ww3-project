/* Using flex layouts so apply to whole body */
body {
	display: flex;
	flex-wrap: wrap;
	align-items: stretch;
}

/* adjusted this for mobile first 
   basically defining a height for xs devices, we will scale with media queries further down
 */
header {
	width: 100%;
	height: 7em;
	display: flex;
	flex-direction: column;
	background-image: url("union_station.jpg");
	background-color: green;
}

footer {
	width: 100%;
	height: 100px;
	background-color: black;
	color: white;
	display: flex !important;
	justify-content: center;
	align-items: center;
	flex-direction: column;
}

/* These are used to selectively display content on mobile/non-mobile devices
   The settings will be overwritten by media queries below.
 */
.not-mobile {
	display: none;
}

.mobile {
	display: flex;
	width: 100%;
}

.title {
	display: flex;
	justify-content: center;
}

.title a, .title a:hover {
	color: #000;
	text-decoration: none;
}

/* header height for xs devices (below 576px width) */
.title h1 {
	color: white;
	font-size: 1.8em;
	margin-top: 0.2em;
}

.modal-content {
	height: 80vh;
}

.modal-body {
	height: 100%;
}

/* Adjusted the spacing for buttons in mobile slightly */
.headerButtons {
	display: flex;
	flex-direction: row-reverse;
	margin-top: 0.3em;
	margin-right: 0.3em;
}

.headerButtons button {
	margin: 0.2em;
}

.map {
	height: 90%;
	width: 100%;
}

.full-height {
	height: 60vh;
	display:flex;
	flex-direction: column;
	width: 100%;
}

/* Used this in a couple locations (e.g. forms) to put spacing between the title and the content */
.header-buffer {
	margin-top: 2em;
	margin-bottom: 1em;
	width: 70vw;
}

/* Navbar */
nav {
	display: flex;
}

nav ul {
	list-style-type: none;
	margin: 0;
	padding: 0;
	width: 100%;
	background-color: #f1f1f1;
}

/* Main page content, need to have width:100% for mobile display */
section {
	width: 100%;
	min-height: 500px;
	display: flex !important;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	background-color: lightblue;
}

/* Navbar on mobile hidden by default */
.mobile-navbar {
	display: none;
}

/* Animate the navbar sliding down when the hamburger is clicked */
#front:target ~ .navbar-close > .mobile-navbar {
	display: block;
	max-height: 100vh;
	overflow: hidden;
	width: 100% !important;
	animation-name: slideDownNavbar;
	animation-iteration-count: 1;
	animation-timing-function: ease-in;
	animation-duration: 0.5s;
}

/* Outer element from the mobile-navbar, need it to be max-height:100vh to animate from 100 to 0 */
.navbar-close {
	width: 100%;
	max-height: 100vh;
}

/* Animate closing the navbar by sliding it up */
#close-front:target ~ .navbar-close > .mobile-navbar {
	width: 100%;
	max-height: 0vh;
	overflow: hidden;
	display: block;
	animation-name: slideUpNavbar;
	animation-iteration-count: 1;
	animation-timing-function: ease-out;
	animation-duration: 0.5s;
}

/* Keyframes for animation - just dynamically adjusts the max-height property */
@keyframes slideDownNavbar {
	0% {
		max-height: 0vh;
	}
	100% {
		max-height: 100vh;
	}
}

@keyframes slideUpNavbar {
	0% {
		max-height: 100vh;
	}
	100% {
		max-height: 0vh;
	}
}

/* Header button styling (i.e. hamburger, login button) */
.mobile-buttons {
	margin-left:auto;
}

.desktop-buttons {
	margin-left: auto;
}

/* Just a little bit of movement of the hamburger icon */
.mobile-nav {
	margin-top: 0.4em;
	margin-left: 1em;
}

/* Desktop navbar (sidebar) does not get displayed on mobile page */
.desktop-navbar {
	display: none;
}

/* Adjust styling as needed for non-mobile devices */
@media (min-width: 768px) {
	.not-mobile {
		display: flex;
	}

	.mobile {
		display: none;
	}

	section {
		width: 80%;
	}

	.title h1 {
		color: white;
		font-size: 3em;
		margin-top: 0em;
	}

	.headerButtons button {
		margin: 0.5em;
	}

	.navbar-close {
		display: none !important;
	}

	.desktop-navbar {
		display: flex;
		width: 20%;
	}
}

/* Some styling for list items in the navbar */
li a {
	display: block;
	color: #000;
	padding: 8px 16px;
	/* added !important to override bootstrap styles applying an underline */
	text-decoration: none !important;
}

li a:hover{
	background-color: #555;
	color: white;
}

/* Active list item */
.active {
	background-color: #4CAF50;
	color: white;
}

/* this makes it so the active navbar element can't display as selected. */
.active:hover {
	background-color: #4CAF50;
	color: white;
}

/* Used for the hack for CSS transitions causing the screen to 'jump' */
.target-fix {
	position: fixed;
	top: 0;
	left: 0;
	display: block;
}

/* Used this to work around an issue with .mobile applying weird styling */
.content-div {
	width: 100%;
	height: 500px;
	display: flex;
	justify-content: center;
	align-items: center;
	background-color: lightblue;
}

/* All the below are related to animating the 'login' modal */
.login-box {
	position: fixed;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	background-color: white;
	max-height: 0vh;
}

/* Just small adjustments to the login box for mobile devices.
We want it to fill the screen instead of having a modal effect on small screens. */
@media (max-width: 576px) {
	.login-box {
		width: 100%;
		height: 100%;
	}
}

/* Bit of padding for the actual login modal contents */
.padding-login-form {
	margin: 2em;
}

/* Force the login close button to align itself to the right */
.button-closelogin {
	float: right;
}

/* This is the grey overlay displayed while login modal is on screen. */
.login-overlay {
	position: fixed;
	/* needed to avoid bootstrap rendering form elements over the overlay */
	z-index: 1000;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	max-height: 0vh;
	background-color: grey;
	background-color: rgba(0.3,0.3,0.3,0);
	display:none;
}

/* Animations for login modal */
#login:target ~ .login-close > .login-overlay {
	max-height: 100vh;
	overflow: hidden;
	display: block;
	background-color: rgba(0.3,0.3,0.3,0.5);
	animation-name: showLoginPanel;
	animation-iteration-count: 1;
	animation-timing-function: ease-in;
	animation-duration: 0.5s;
}

#login:target ~ .login-close > .login-overlay > .login-box {
	max-height: 100vh;
	overflow: hidden;
	display: block;
	opacity: 1.0;
	animation-name: showLoginBox;
	animation-iteration-count: 1;
	animation-timing-function: ease-in;
	animation-duration: 0.5s;
}

.login-close {
	background-color: rgba(0.3,0.3,0.3,0.5);
	max-height: 100vh;
}

#close-login:target ~ .login-close > .login-overlay {
	background-color: rgba(0.3,0.3,0.3,0);
	max-height: 0vh;
	overflow: hidden;
	display: block;
	animation-name: hideLoginPanel;
	animation-iteration-count: 1;
	animation-timing-function: ease-out;
	animation-duration: 0.5s;
}

#close-login:target ~ .login-close > .login-overlay > .login-box {
	opacity: 0;
	max-height: 0vh;
	overflow: hidden;
	display: block;
	animation-name: hideLoginBox;
	animation-iteration-count: 1;
	animation-timing-function: ease-out;
	animation-duration: 0.5s;
}

@keyframes showLoginPanel {
	0% {
		background-color: rgba(0.3,0.3,0.3,0);
		max-height: 0vh;
	}
	50% {
		background-color: rgba(0.3,0.3,0.3,0);
		max-height: 100vh;
	}
	100% {
		background-color: rgba(0.3,0.3,0.3,0.5);
		max-height: 100vh;
	}
}

@keyframes hideLoginPanel {
	0% {
		background-color: rgba(0.3,0.3,0.3,0.5);
		max-height: 100vh;
	}
	50% {
		background-color: rgba(0.3,0.3,0.3,0);
		max-height: 100vh;
	}
	100% {
		background-color: rgba(0.3,0.3,0.3,0);
		max-height: 0vh;
	}
}

@keyframes showLoginBox {
	0% {
		opacity: 0;
		max-height: 0vh;
	}
	50% {
		opacity: 0;
		max-height: 100vh;
	}
	100% {
		opacity: 1.0;
		max-height: 100vh;
	}
}

@keyframes hideLoginBox {
	0% {
		opacity: 1.0;
		max-height: 100vh;
	}
	50% {
		opacity: 0;
		max-height: 100vh;
	}
	100% {
		opacity: 0;
		max-height: 0vh;
	}
}